{"title":"Actividad motivacional  - Álgebra Lineal en los Videojuegos","markdown":{"yaml":{"title":"Actividad motivacional  - Álgebra Lineal en los Videojuegos","format":"html","bibliography":"referencias.bib","link-citations":true,"filters":["pyodide"]},"headingText":"Escenario","containsRefs":false,"markdown":"\n\n\n\nUn jugador situado en $(1,1)$ dispara un proyectil láser que viaja según el vector de dirección $\\vec d=(4,3)$. Un enemigo 2D se modela como un **círculo** de radio $r=2$ centrado en $(13,11)$.  \n\nNuestro objetivo es decidir si el proyectil golpea al enemigo, usando únicamente conceptos elementales de geometría analítica y álgebra lineal.\n\n\n### Visualización (ejecuta antes de leer la explicación)\n\n```{python}\n#|echo: false\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n# Datos del problema\nP0 = np.array([1, 1])           # Posición inicial del proyectil\nv  = np.array([4, 3])           # Vector de dirección (no normalizado)\nC  = np.array([13, 11])         # Centro del círculo (enemigo)\nr  = 2                          # Radio del círculo\n\n# Trayectoria paramétrica  P(t)=P0 + t*v, 0≤t≤T\nT = 4                           # tiempo máximo de dibujo (arbitrario)\nt = np.linspace(0, T, 250)\ntraj = P0[:, None] + v[:, None] * t\n\nfig, ax = plt.subplots()\nax.plot(*traj, lw=1.5, label='Trayectoria del proyectil')\nax.scatter(*P0, color='green', zorder=5, label='Jugador $(1,1)$')\n\n# Círculo del enemigo\ncircle = plt.Circle(C, r, ec='red', fc='none', lw=2, label='Enemigo (radio 2)')\nax.add_patch(circle)\nax.scatter(*C, color='red', zorder=5)\n\n# Ajustes de la figura para cuadrícula\nax.set_aspect('equal')\nax.set_xlabel('$x$')\nax.set_ylabel('$y$')\nax.set_title('Escena de colisión')\nax.legend(loc='upper left')\nax.set_xticks(np.arange(0, 18, 1))\nax.set_yticks(np.arange(0, 16, 1))\nax.set_xlim(0, 17)\nax.set_ylim(0, 15)\nax.grid(True, which='both', linestyle='-', linewidth=0.7, alpha=0.8)\nplt.tight_layout()\n```\n\n# El escenario\n\nTu personaje se encuentra en la posición $(1,1)$ y dispara un proyectil.\n\n* El proyectil viaja en la dirección indicada por el vector $\\vec d = (4,3)$.\n  Esto significa que por cada 4 unidades que avanza hacia la derecha, sube 3 unidades.\n* El enemigo es un círculo con centro en $(13,11)$ y radio $2$.\n\n## Tu misión (15 minutos)\n\nSin usar herramientas de geometría avanzada ni fórmulas que no conozcas, ¿cómo podrías determinar si el proyectil golpeará al enemigo?\n\n**Instrucciones:**\n\n* Piensa en una estrategia, un método o un “algoritmo” para responder a la pregunta: **¿hay colisión?**\n* Describe tu idea de la manera más clara posible.\n* Puedes usar dibujos, diagramas o explicar los pasos que seguirías.\n","srcMarkdownNoYaml":"\n\n\n### Escenario\n\nUn jugador situado en $(1,1)$ dispara un proyectil láser que viaja según el vector de dirección $\\vec d=(4,3)$. Un enemigo 2D se modela como un **círculo** de radio $r=2$ centrado en $(13,11)$.  \n\nNuestro objetivo es decidir si el proyectil golpea al enemigo, usando únicamente conceptos elementales de geometría analítica y álgebra lineal.\n\n\n### Visualización (ejecuta antes de leer la explicación)\n\n```{python}\n#|echo: false\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n# Datos del problema\nP0 = np.array([1, 1])           # Posición inicial del proyectil\nv  = np.array([4, 3])           # Vector de dirección (no normalizado)\nC  = np.array([13, 11])         # Centro del círculo (enemigo)\nr  = 2                          # Radio del círculo\n\n# Trayectoria paramétrica  P(t)=P0 + t*v, 0≤t≤T\nT = 4                           # tiempo máximo de dibujo (arbitrario)\nt = np.linspace(0, T, 250)\ntraj = P0[:, None] + v[:, None] * t\n\nfig, ax = plt.subplots()\nax.plot(*traj, lw=1.5, label='Trayectoria del proyectil')\nax.scatter(*P0, color='green', zorder=5, label='Jugador $(1,1)$')\n\n# Círculo del enemigo\ncircle = plt.Circle(C, r, ec='red', fc='none', lw=2, label='Enemigo (radio 2)')\nax.add_patch(circle)\nax.scatter(*C, color='red', zorder=5)\n\n# Ajustes de la figura para cuadrícula\nax.set_aspect('equal')\nax.set_xlabel('$x$')\nax.set_ylabel('$y$')\nax.set_title('Escena de colisión')\nax.legend(loc='upper left')\nax.set_xticks(np.arange(0, 18, 1))\nax.set_yticks(np.arange(0, 16, 1))\nax.set_xlim(0, 17)\nax.set_ylim(0, 15)\nax.grid(True, which='both', linestyle='-', linewidth=0.7, alpha=0.8)\nplt.tight_layout()\n```\n\n# El escenario\n\nTu personaje se encuentra en la posición $(1,1)$ y dispara un proyectil.\n\n* El proyectil viaja en la dirección indicada por el vector $\\vec d = (4,3)$.\n  Esto significa que por cada 4 unidades que avanza hacia la derecha, sube 3 unidades.\n* El enemigo es un círculo con centro en $(13,11)$ y radio $2$.\n\n## Tu misión (15 minutos)\n\nSin usar herramientas de geometría avanzada ni fórmulas que no conozcas, ¿cómo podrías determinar si el proyectil golpeará al enemigo?\n\n**Instrucciones:**\n\n* Piensa en una estrategia, un método o un “algoritmo” para responder a la pregunta: **¿hay colisión?**\n* Describe tu idea de la manera más clara posible.\n* Puedes usar dibujos, diagramas o explicar los pasos que seguirías.\n"},"formats":{"html":{"identifier":{"display-name":"HTML","target-format":"html","base-format":"html"},"execute":{"fig-width":7,"fig-height":5,"fig-format":"retina","fig-dpi":96,"df-print":"default","error":false,"eval":true,"cache":null,"freeze":false,"echo":true,"output":true,"warning":true,"include":true,"keep-md":false,"keep-ipynb":false,"ipynb":null,"enabled":null,"daemon":null,"daemon-restart":false,"debug":false,"ipynb-filters":[],"ipynb-shell-interactivity":null,"plotly-connected":true,"engine":"jupyter"},"render":{"keep-tex":false,"keep-typ":false,"keep-source":false,"keep-hidden":false,"prefer-html":false,"output-divs":true,"output-ext":"html","fig-align":"default","fig-pos":null,"fig-env":null,"code-fold":"none","code-overflow":"scroll","code-link":false,"code-line-numbers":false,"code-tools":false,"tbl-colwidths":"auto","merge-includes":true,"inline-includes":false,"preserve-yaml":false,"latex-auto-mk":true,"latex-auto-install":true,"latex-clean":true,"latex-min-runs":1,"latex-max-runs":10,"latex-makeindex":"makeindex","latex-makeindex-opts":[],"latex-tlmgr-opts":[],"latex-input-paths":[],"latex-output-dir":null,"link-external-icon":false,"link-external-newwindow":false,"self-contained-math":false,"format-resources":[],"notebook-links":true},"pandoc":{"standalone":true,"wrap":"none","default-image-extension":"png","to":"html","css":["styles.css"],"toc":true,"filters":["pyodide"],"output-file":"Enganche_1.html"},"language":{"toc-title-document":"Table of contents","toc-title-website":"On this page","related-formats-title":"Other Formats","related-notebooks-title":"Notebooks","source-notebooks-prefix":"Source","other-links-title":"Other Links","code-links-title":"Code Links","launch-dev-container-title":"Launch Dev Container","launch-binder-title":"Launch Binder","article-notebook-label":"Article Notebook","notebook-preview-download":"Download Notebook","notebook-preview-download-src":"Download Source","notebook-preview-back":"Back to Article","manuscript-meca-bundle":"MECA Bundle","section-title-abstract":"Abstract","section-title-appendices":"Appendices","section-title-footnotes":"Footnotes","section-title-references":"References","section-title-reuse":"Reuse","section-title-copyright":"Copyright","section-title-citation":"Citation","appendix-attribution-cite-as":"For attribution, please cite this work as:","appendix-attribution-bibtex":"BibTeX citation:","appendix-view-license":"View License","title-block-author-single":"Author","title-block-author-plural":"Authors","title-block-affiliation-single":"Affiliation","title-block-affiliation-plural":"Affiliations","title-block-published":"Published","title-block-modified":"Modified","title-block-keywords":"Keywords","callout-tip-title":"Tip","callout-note-title":"Note","callout-warning-title":"Warning","callout-important-title":"Important","callout-caution-title":"Caution","code-summary":"Code","code-tools-menu-caption":"Code","code-tools-show-all-code":"Show All Code","code-tools-hide-all-code":"Hide All Code","code-tools-view-source":"View Source","code-tools-source-code":"Source Code","tools-share":"Share","tools-download":"Download","code-line":"Line","code-lines":"Lines","copy-button-tooltip":"Copy to Clipboard","copy-button-tooltip-success":"Copied!","repo-action-links-edit":"Edit this page","repo-action-links-source":"View source","repo-action-links-issue":"Report an issue","back-to-top":"Back to top","search-no-results-text":"No results","search-matching-documents-text":"matching documents","search-copy-link-title":"Copy link to search","search-hide-matches-text":"Hide additional matches","search-more-match-text":"more match in this document","search-more-matches-text":"more matches in this document","search-clear-button-title":"Clear","search-text-placeholder":"","search-detached-cancel-button-title":"Cancel","search-submit-button-title":"Submit","search-label":"Search","toggle-section":"Toggle section","toggle-sidebar":"Toggle sidebar navigation","toggle-dark-mode":"Toggle dark mode","toggle-reader-mode":"Toggle reader mode","toggle-navigation":"Toggle navigation","crossref-fig-title":"Figure","crossref-tbl-title":"Table","crossref-lst-title":"Listing","crossref-thm-title":"Theorem","crossref-lem-title":"Lemma","crossref-cor-title":"Corollary","crossref-prp-title":"Proposition","crossref-cnj-title":"Conjecture","crossref-def-title":"Definition","crossref-exm-title":"Example","crossref-exr-title":"Exercise","crossref-ch-prefix":"Chapter","crossref-apx-prefix":"Appendix","crossref-sec-prefix":"Section","crossref-eq-prefix":"Equation","crossref-lof-title":"List of Figures","crossref-lot-title":"List of Tables","crossref-lol-title":"List of Listings","environment-proof-title":"Proof","environment-remark-title":"Remark","environment-solution-title":"Solution","listing-page-order-by":"Order By","listing-page-order-by-default":"Default","listing-page-order-by-date-asc":"Oldest","listing-page-order-by-date-desc":"Newest","listing-page-order-by-number-desc":"High to Low","listing-page-order-by-number-asc":"Low to High","listing-page-field-date":"Date","listing-page-field-title":"Title","listing-page-field-description":"Description","listing-page-field-author":"Author","listing-page-field-filename":"File Name","listing-page-field-filemodified":"Modified","listing-page-field-subtitle":"Subtitle","listing-page-field-readingtime":"Reading Time","listing-page-field-wordcount":"Word Count","listing-page-field-categories":"Categories","listing-page-minutes-compact":"{0} min","listing-page-category-all":"All","listing-page-no-matches":"No matching items","listing-page-words":"{0} words","listing-page-filter":"Filter","draft":"Draft"},"metadata":{"lang":"en","fig-responsive":true,"quarto-version":"1.7.33","theme":"cosmo","title":"Actividad motivacional  - Álgebra Lineal en los Videojuegos","bibliography":["referencias.bib"],"link-citations":true},"extensions":{"book":{"multiFile":true}}}},"projectFormats":["html"]}